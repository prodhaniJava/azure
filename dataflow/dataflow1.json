{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "employeedeptdataset",
						"type": "DatasetReference"
					},
					"name": "fetchemployee"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "emplyee"
				},
				{
					"dataset": {
						"referenceName": "departmentDataset",
						"type": "DatasetReference"
					},
					"name": "department"
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as integer,",
				"          name as string,",
				"          salary as string,",
				"          deptid as integer,",
				"          deptname as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> fetchemployee",
				"fetchemployee aggregate(groupBy(deptid),",
				"     deptName = first(deptname)) ~> aggregate1",
				"fetchemployee sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id as string,",
				"          name as string,",
				"          salary as string,",
				"          deptid as string,",
				"          deptname as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          id,",
				"          name,",
				"          salary",
				"     )) ~> emplyee",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          deptid as string,",
				"          deptname as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          deptid,",
				"          deptname = deptName",
				"     )) ~> department"
			]
		}
	}
}